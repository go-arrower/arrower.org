"use strict";(self.webpackChunkarrower_org=self.webpackChunkarrower_org||[]).push([[49],{8541:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=s(5893),a=s(1151);const o={sidebar_position:1},r="Repeating Tasks",i={id:"basics/repeating-tasks/index",title:"Repeating Tasks",description:"If you want to run repeating tasks, arrower utilises pgcron.",source:"@site/docs/basics/04-repeating-tasks/index.md",sourceDirName:"basics/04-repeating-tasks",slug:"/basics/repeating-tasks/",permalink:"/docs/basics/repeating-tasks/",draft:!1,unlisted:!1,editUrl:"https://github.com/go-arrower/arrower.org/tree/master/docs/basics/04-repeating-tasks/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Jobs",permalink:"/docs/basics/jobs/"},next:{title:"Testing",permalink:"/docs/basics/testing/"}},c={},l=[{value:"Scheduling Tasks",id:"scheduling-tasks",level:2},{value:"Scheduling Complex Tasks as Jobs",id:"scheduling-complex-tasks-as-jobs",level:2},{value:"Postgres Image With pg_cron",id:"postgres-image-with-pg_cron",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"repeating-tasks",children:"Repeating Tasks"}),"\n",(0,t.jsxs)(n.p,{children:["If you want to run repeating tasks, arrower utilises ",(0,t.jsx)(n.a,{href:"https://github.com/citusdata/pg_cron",children:"pg_cron"}),"."]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"TODO Link to the architectural vision of utilising postgres as much as possible"})}),"\n",(0,t.jsx)(n.h2,{id:"scheduling-tasks",children:"Scheduling Tasks"}),"\n",(0,t.jsxs)(n.p,{children:["Also consult the ",(0,t.jsx)(n.a,{href:"https://github.com/citusdata/pg_cron",children:"official documentation"})," of pg_cron."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Delete old data on Saturday at 3:30am (GMT)\nSELECT cron.schedule('30 3 * * 6', $$DELETE FROM events WHERE event_time < now() - interval '1 week'$$);\n schedule\n----------\n       42\n\n-- Vacuum every day at 10:00am (GMT)\nSELECT cron.schedule('nightly-vacuum', '0 10 * * *', 'VACUUM');\n schedule\n----------\n       43\n\n-- Change to vacuum at 3:00am (GMT)\nSELECT cron.schedule('nightly-vacuum', '0 3 * * *', 'VACUUM');\n schedule\n----------\n       43\n\n-- Stop scheduling jobs\nSELECT cron.unschedule('nightly-vacuum' );\n unschedule \n------------\n t\n\nSELECT cron.unschedule(42);\n unschedule\n------------\n          t\n\n-- Vacuum every Sunday at 4:00am (GMT) in a database other than the one pg_cron is installed in\nSELECT cron.schedule_in_database('weekly-vacuum', '0 4 * * 0', 'VACUUM', 'some_other_database');\n schedule\n----------\n       44\n\n-- Call a stored procedure every 5 seconds\nSELECT cron.schedule('process-updates', '5 seconds', 'CALL process_updates()');\n\n-- Process payroll at 12:00 of the last day of each month\nSELECT cron.schedule('process-payroll', '0 12 $ * *', 'CALL process_payroll()');\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:" \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 min (0 - 59)\n \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 hour (0 - 23)\n \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of month (1 - 31) or last day of the month ($)\n \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 month (1 - 12)\n \u2502 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 day of week (0 - 6) (0 to 6 are Sunday to\n \u2502 \u2502 \u2502 \u2502 \u2502                  Saturday, or use names; 7 is also Sunday)\n \u2502 \u2502 \u2502 \u2502 \u2502\n \u2502 \u2502 \u2502 \u2502 \u2502\n * * * * *\n"})}),"\n",(0,t.jsxs)(n.p,{children:["An easy way to create a cron schedule is: ",(0,t.jsx)(n.a,{href:"http://crontab.guru/",children:"crontab.guru"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"scheduling-complex-tasks-as-jobs",children:"Scheduling Complex Tasks as Jobs"}),"\n",(0,t.jsxs)(n.p,{children:["The repeating tasks introduced above rely on and execute SQL statements only.\nIn some cases this might be to limiting for your needs.\nIf you need to execute more complex business logic, use the cron to insert a row into the jobs table.\nThis way the ",(0,t.jsx)(n.a,{href:"./jobs#inserting-jobs-into-the-database",children:"Jobs"})," system is taking over,\nallowing you to perform any kind of operation without the limits of SQL."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"SELECT cron.schedule('your-custom-cron', '* * * * *',\n$$INSERT INTO arrower.gue_jobs(job_id, created_at, updated_at, run_at, queue, job_type, priority, args)\nVALUES (\ngenerate_ulid(), now(), now(), now(),\n'', 'MyJob', 0,\n(json_build_object('jobData', '{}') #>> '{}')::BYTEA);$$);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"postgres-image-with-pg_cron",children:"Postgres Image With pg_cron"}),"\n",(0,t.jsxs)(n.p,{children:["You can use any (managed) database that has the pg_cron extension installed.\nAlternatively, use the docker image ",(0,t.jsx)(n.code,{children:"ghcr.io/go-arrower/postgres"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"docker pull ghcr.io/go-arrower/postgres:latest\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The image installs the extension into the default database ",(0,t.jsx)(n.code,{children:"postges"})," and makes it available to your database,\nas if it was installed there."]}),"\n",(0,t.jsx)(n.p,{children:"The image is regenerated every week, so that you might have the latest version of postgres and its base image available to you."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Link ADL on why this is.\nTesting and limitations of pg_cron"})}),"\n",(0,t.jsx)(n.p,{children:"If you want to use the cron from a different user or database, you might have to fine-tune your setup:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure your user can access the cron schema:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sql",children:"-- Inside the database where pg_cron is installed:\n-- grant usage to regular user\nGRANT USAGE ON SCHEMA cron TO your_username;\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["The arrower migrations assume pg_cron is installed in the database ",(0,t.jsx)(n.code,{children:"postgres"})," if this is not the case\nupdate the database used in the migrations, see ",(0,t.jsx)(n.a,{href:"https://github.com/go-arrower/arrower/blob/master/postgres/migrations/000002_create_pg_cron_extension.up.sql",children:"create_pg_cron_extension.up.sql"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>r});var t=s(7294);const a={},o=t.createContext(a);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);