"use strict";(self.webpackChunkarrower_org=self.webpackChunkarrower_org||[]).push([[6197],{2448:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var r=n(5893),o=n(1151),a=n(8117);const u='package main\n\nimport (\n\t"context"\n\t"fmt"\n\t"log/slog"\n\t"net/http"\n\n\t"github.com/labstack/echo/v4"\n\n\t"github.com/go-arrower/arrower"\n)\n\ntype MyJob struct {\n\tPayload string\n}\n\nfunc main() {\n\ta, _, err := arrower.New()\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\t// highlight-start\n\terr = a.DefaultQueue.RegisterJobFunc(func(ctx context.Context, job MyJob) error {\n\t\ta.Logger.InfoContext(ctx, "process job with data", slog.String("payload", job.Payload))\n\t\treturn nil\n\t})\n\t// highlight-end\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\n\ta.WebRouter.POST("/add-job", func(c echo.Context) error {\n\t\t// highlight-next-line\n\t\t_ = a.DefaultQueue.Enqueue(c.Request().Context(), MyJob{Payload: c.FormValue("payload")})\n\n\t\treturn c.NoContent(http.StatusAccepted)\n\t})\n\n\ta.WebRouter.Logger.Fatal(a.WebRouter.Start(fmt.Sprintf(":%d", a.Config.Web.Port)))\n}\n',s={},i="Run Jobs",d={id:"guides/run-jobs/index",title:"Run Jobs",description:"Enqueue a single job",source:"@site/docs/guides/run-jobs/index.md",sourceDirName:"guides/run-jobs",slug:"/guides/run-jobs/",permalink:"/docs/guides/run-jobs/",draft:!1,unlisted:!1,editUrl:"https://github.com/go-arrower/arrower.org/tree/master/docs/guides/run-jobs/index.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cron",permalink:"/docs/guides/cron/"}},c={},l=[{value:"Enqueue a single job",id:"enqueue-a-single-job",level:2},{value:"Output",id:"output",level:3}];function g(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"run-jobs",children:"Run Jobs"}),"\n",(0,r.jsx)(t.h2,{id:"enqueue-a-single-job",children:"Enqueue a single job"}),"\n",(0,r.jsx)(a.Z,{language:"go",title:"run-job.go",children:u}),"\n",(0,r.jsx)(t.p,{children:"Enqueue the job with a HTTP POST request.\nThis request could be triggered from a HTML form as well."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"curl -X POST localhost:8080/add-job -d 'payload=custom-data'\n"})}),"\n",(0,r.jsx)(t.h3,{id:"output",children:"Output"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'time=2024-06-15T18:47:16.518+02:00 level=INFO msg="process job with data" payload=custom-data traceID=2d0313c84d33f545a635a91e23393252 spanID=c89d79308de416e6 jobID=01J0ECQG0FXQ474E2RJS9TJTTW\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);