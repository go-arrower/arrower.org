"use strict";(self.webpackChunkarrower_org=self.webpackChunkarrower_org||[]).push([[796],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4684:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1,title:"Why Arrower?"},i=void 0,l={unversionedId:"why",id:"why",title:"Why Arrower?",description:"A complete framework to develop Go web applications.",source:"@site/docs/why.md",sourceDirName:".",slug:"/why",permalink:"/docs/why",draft:!1,editUrl:"https://github.com/go-arrower/arrower.org/tree/master/docs/why.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Why Arrower?"},sidebar:"tutorialSidebar",next:{title:"Getting Started",permalink:"/docs/getting-started"}},s={},c=[{value:"Principles",id:"principles",level:2},{value:"Contributing?",id:"contributing",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{style:{textAlign:"center"}},(0,o.kt)("i",null,"A complete framework to develop Go web applications.")),(0,o.kt)("h1",{id:"motivation"},"Motivation"),(0,o.kt)("p",null,"This is an opinionated approach. Make sure that your goals and architectural drivers align with the\nones chosen by Arrower. Otherwise, we might not be a fit at all..."),(0,o.kt)("p",null,"Developing websites and web applications for decades, it both became easier and more difficult\nto create and run a web app at the same time.\nOn the one end, tools like WordPress just replaced my previous work completely, while applications are still\nchallenging to build, as the requirements and expectations have increased significantly."),(0,o.kt)("p",null,"Other communities like Rails, and Django have recognised this.\nThe Go community always took a stance against frameworks (often justified).\nHowever, working on small to mid-sized projects, I regularly get bogged down in technical boilerplate\nhandwriting parts of what is basically a project specific framework in the end,\ninstead of focussing on the users and the functions."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Every project needs boilerplate")," like linters, makefile, local automation, db migrations"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Routine web stuff has to be puzzled together")," like www router, view loading, template handling, etc."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Massive time investments into repeating concerns"),". Manual configuration setup, being busy with tech instead of features: different loggers over time."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"A Go framework needs to fit the the language")," Working with active record and frameworks like buffalo or beego just are not attractive and when used had quality issues"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Developer experience from other languages are not available in Go")," Code life reloading: backend and frontend"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Time of npm is ending")," Don't like JS & npm in the stack"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Ops and Maintenance requirements have pilled up")," increased expectations on dev-ops & observability (when self-hosting & managing)")),(0,o.kt)("p",null,"Not each project has the same needs and is confronted with all these problems.\nIf they sound familiar to you, though, you might like Arrower."),(0,o.kt)("h2",{id:"principles"},"Principles"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Focus on the application."),"\nKeep your users and the goals of the application in your focus.\nInstead of repeating technical concerns.\nFor this Arrower already comes with batteries included for things like Operations (observability) and support\n(admin dashboard).\nIncreasing the time you sent on business logic vs. infrastructural concerns.  "),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Developer comfort without fighting the framework."),'\nWrite more "clean" and "maintainable" code.\nUtilise helpers for common tasks.'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Full stack, from ops to frontend."),"\nThe goal is to enable small teams to do a lot.\nReduce the reliance on npm and JS but only to stay productive\nand not mess with technical concerns where they would not be required and can be done via hypermedia.\nIn no way will prevent this you, and if you need more interactivity you can include your favorite frontend framework like Angular,\nreact, vue, or others."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"From single file to multiple teams."),"\nGrow your codebase as the needs require it.\nStart simple side projects, prototype rapidly, or engineer a solid SaaS application with your colleagues.\nFocus on your domain."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Simple where possible."),"\nSoftware is all about tradeofs,\nArrower chooses operation simplicity (monolith)\nand simple development concepts (hypermedia) over current trend of the decade.\nIf you want enterprise or microservices, you might be wrong.\nBut in no way does Arrower intend to prevent you from doing so anyway."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Encourage proven experience."),"\nThe Go community has always kept a high bar and prevent many bas habits to take root, e.g.\ninsisting that a logger is a dependency and must not be part of a ",(0,o.kt)("inlineCode",{parentName:"li"},"ctx"),'.\nArrower encourages a compilation of best practices and experience that will help to write "good"\nsoftware.')),(0,o.kt)("p",null,"The goal is to keep up with innovation where the standard library does not, without patronising you.\nBe aware of your goals and architectural drivers, so you can design the think that solves the problem you actually have."),(0,o.kt)("h2",{id:"contributing"},"Contributing?"),(0,o.kt)("p",null,"At this point, Arrower is still experimental and does not accept code contributions.\nIt will accept contributions later on.\nAnd licencing will be looked at."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Feedback on the concepts, goals, and abstractions is very welcome!")))}d.isMDXComponent=!0}}]);